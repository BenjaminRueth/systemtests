sudo: true
dist: trusty
language: python
python:
  - "3.5"
services:
  - docker

jobs:

  include:
    - stage: Building preCICE
      name: "Ubuntu 16.04 home"
      if: fork = false
      script:
        - docker build -f precice/Dockerfile.Ubuntu1604.home -t $DOCKER_USERNAME/precice-ubuntu1604.home-develop .
      deploy:
        skip_cleanup: true
        provider: script
        on:
          all_branches: true
        script: >-
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin &&
          docker push $DOCKER_USERNAME/precice-ubuntu1604.home-develop:latest

    - stage: Building adapters
      name: SU2 adapter
      if: fork = false
      script:
        - docker build -f adapters/Dockerfile.su2-adapter -t $DOCKER_USERNAME/su2-adapter-ubuntu1604.home-develop .
      deploy:
        skip_cleanup: true
        provider: script
        on:
          all_branches: true
        script: >-
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin &&
          docker push $DOCKER_USERNAME/su2-adapter-ubuntu1604.home-develop

    - name: CalculiX adapter
      if: fork = false
      script:
        - docker build -f adapters/Dockerfile.calculix-adapter -t $DOCKER_USERNAME/calculix-adapter-ubuntu1604.home-develop .
      deploy:
        skip_cleanup: true
        provider: script
        on:
          all_branches: true
        script: >-
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin &&
          docker push $DOCKER_USERNAME/calculix-adapter-ubuntu1604.home-develop

    - stage: Tests
      name: "[16.04] SU2 <-> Calculix"
      script:
        - python system_testing.py -s su2-ccx
      after_failure:
        - python push.py -t su2-ccx
      deploy:
        skip_cleanup: true
        provider: script
        on:
          all_branches: true
        script: python push.py -s -t su2-ccx
